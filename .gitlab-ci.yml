image: jhipster/jhipster:v6.10.3

cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
        - .gradle/
stages:
    - check
    - build
    - test
    - analyze
    - package
    - release
    - deploy
before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - ./gradlew npm_install -PnodeInstall --no-daemon
nohttp:
    stage: check
    script:
        - ./gradlew checkstyleNohttp --no-daemon

gradle-compile:
    stage: build
    script:
        - ./gradlew compileJava -x check -PnodeInstall --no-daemon
    artifacts:
        paths:
          - build/classes/
          - build/generated/
        expire_in: 1 day

gradle-test:
    stage: test
    script:
        - ./gradlew check -PnodeInstall --no-daemon
    artifacts:
        reports:
            junit: build/test-results/test/TEST-*.xml
        paths:
            - build/test-results/
            - build/jacoco/
        expire_in: 1 day

gradle-integration-test:

    stage: test
    script:
        - ./gradlew integrationTest -PnodeInstall --no-daemon 
    artifacts:
        reports:
            junit: build/test-results/integrationTest/TEST-*.xml
        paths:
            - build/test-results/
            - build/jacoco/
        expire_in: 1 day


gradle-package:
    stage: package
    script:
        - ./gradlew bootJar -Pprod -PnodeInstall -x check --no-daemon
    artifacts:
        paths:
            - build/libs/*.jar
            - build/classes
        expire_in: 1 day

# Uncomment the following line to use gitlabs container registry. You need to adapt the REGISTRY_URL in case you are not using gitlab.com
#docker-push:
#    stage: release
#    variables:
#        REGISTRY_URL: registry.gitlab.com
#        IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA
#    dependencies:
#        - gradle-package
#    script:
#        - ./gradlew jib -Pprod -PnodeInstall -Djib.to.image=$IMAGE_TAG -Djib.to.auth.username="gitlab-ci-token"  -Djib.to.auth.password=$CI_BUILD_TOKEN

deploy-to-production:
    stage: deploy
    script:
        - ./gradlew deployHeroku --no-daemon
    environment:
        name: production
    when: manual
