stages:
  - test
  - build
  - deploy

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never

.install-frontend: &install-frontend
  - cd frontend
  - npm install --progress=false

.install-backend: &install-backend
  - cd backend
  - export GRADLE_USER_HOME=`pwd`/backend/.gradle

.install-deploy: &install-deploy
  - apt-get update
  - apt-get install -y git
  - git config user.name "CI durch Paul Gla√ü"

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

frontend-lint-test:
  stage: test
  image: node
  before_script:
    - *install-frontend
  script:
    - npm run lint
  interruptible: true

backend-gradle-test:
  stage: test
  image: gradle:6.7.1-jdk11
  before_script:
    - *install-backend
  script:
    - gradle check
  interruptible: true

frontend-build:
  stage: build
  image: node
  before_script:
    - *install-frontend
  script:
    - npm run build
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_REF_NAME != "$CI_DEFAULT_BRANCH"'
      when: manual
    - if: '$CI_COMMIT_REF_NAME == "$CI_DEFAULT_BRANCH"'
      when: always
  artifacts:
    expire_in: 1 day
    paths:
      - frontend/dist
  interruptible: true

backend-build:
  stage: build
  image: gradle:6.7.1-jdk11
  before_script:
    - *install-backend
  script:
    - gradle assemble
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_REF_NAME != "$CI_DEFAULT_BRANCH"'
      when: manual
    - if: '$CI_COMMIT_REF_NAME == "$CI_DEFAULT_BRANCH"'
      when: always
  artifacts:
    paths:
      - backend/build/libs/*.jar
    expire_in: 1 day
  interruptible: true

deploy-frontend:
  image: debian
  stage: deploy
  before_script:
    - *install-deploy
  script:
    - subtree_hash=$(git subtree split --prefix frontend HEAD --)
    - echo "Deploy frontend from subtree hash $subtree_hash"
    - git push "https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_FRONTEND.git" "${subtree_hash}:master" --force
  rules:
    - if: '$CI_COMMIT_REF_NAME == "$CI_DEFAULT_BRANCH"'
      when: manual

deploy-backend:
  image: debian
  stage: deploy
  before_script:
    - *install-deploy
  script:
    - subtree_hash=$(git subtree split --prefix backend HEAD --)
    - echo "Deploy backend from subtree hash $subtree_hash"
    - git push "https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_BACKEND.git" "${subtree_hash}:master" --force
  rules:
    - if: '$CI_COMMIT_REF_NAME == "$CI_DEFAULT_BRANCH"'
      when: manual
